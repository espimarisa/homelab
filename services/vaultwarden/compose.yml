---
x-defaults: &defaults
  restart: unless-stopped
  read_only: true # Prevent writing to the image directly.
  user: "${PUID}:${PGID}" # Run as non-root user.
  cap_drop:
    - ALL # Drop all default capabilities.
  security_opt:
    - no-new-privileges:true # Do not allow privilege escalation.

services:
  ###########################################################################
  # Vaultwarden: BW server - https://github.com/dani-garcia/vaultwarden     #
  ###########################################################################

  vaultwarden:
    <<: *defaults
    image: ghcr.io/dani-garcia/vaultwarden:latest-alpine
    container_name: vaultwarden
    hostname: vaultwarden
    environment:
      ADMIN_RATELIMIT_MAX_BURST: "3" # Configures admin burst ratelimit settings.
      ADMIN_RATELIMIT_SECONDS: "300" # Configures how long to ratelimit the admin account for.
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN} # Sets the admin token.
      DOMAIN: "https://${VAULTWARDEN_URL}" # Sets the URL to use.
      EMAIL_CHANGE_ALLOWED: "true" # Allow users to change their email.
      DATABASE_URL: "postgres://postgres:${VAULTWARDEN_DB_PASSWORD}@vaultwarden-db:5432/postgres" # PostgreSQL connection url.
      EMERGENCY_ACCESS_ALLOWED: "true" # Allow emergency access.
      EXPERIMENTAL_CLIENT_FEATURE_FLAGS: "inline-menu-positioning-improvements,inline-menu-totp,ssh-agent,ssh-key-vault-item,export-attachments"
      IP_HEADER: "X-Forwarded-For" # Required for reverse proxy.
      LOGIN_RATELIMIT_MAX_BURST: "10" # Configures max burst ratelimit.
      LOGIN_RATELIMIT_SECONDS: "60" # Ratelimit for 60 seconds.
      PUSH_ENABLED: "${VAULTWARDEN_PUSH_ENABLED}" # Toggles support for push notifications.
      PUSH_INSTALLATION_ID: "${VAULTWARDEN_PUSH_INSTALLATION_ID}" # Bitwarden installation ID for push notifications.
      PUSH_INSTALLATION_KEY: "${VAULTWARDEN_PUSH_INSTALLATION_KEY}" # Bitwarden installation key for push notifications.
      REQUIRE_DEVICE_EMAIL: "true" # Require email verification.
      SENDS_ALLOWED: "true" # Allow usage of the send feature.
      SIGNUPS_ALLOWED: "${VAULTWARDEN_SIGNUPS}" # Toggles support for signing up.
      SIGNUPS_VERIFY: "true" # Require signups to be verified.
      SMTP_FROM: "${SMTP_SENDER}" # Sets the SMTP sender address.
      SMTP_HOST: "${SMTP_HOST}" # Sets the SMTP host.
      SMTP_PASSWORD: "${SMTP_PASSWORD}" # Sets the SMTP password.
      SMTP_PORT: "${SMTP_PORT}" # Sets the SMTP port.
      SMTP_SECURITY: "${SMTP_SECURITY}" # Sets the SMTP security type.
      SMTP_TIMEOUT: "${SMTP_TIMEOUT}" # Sets the SMTP timeout.
      SMTP_USERNAME: "${SMTP_USERNAME}" # Sets the SMTP username.
      TZ: "${TZ}" # Sets the timezone.
      WEB_VAULT_ENABLED: "true" # Enables the web vault.
      WEBSOCKET_ENABLED: "true" # Enables websocket.
    expose:
      - 80/tcp # Web interface reverse proxied externally at ${VAULTWARDEN_URL}.
    networks:
      - external
      - internal
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}" # Required for read_only image.
    volumes:
      - vaultwarden:/data # Configuration and data.
    deploy:
      resources:
        limits:
          cpus: 0.5 # Allow up to 0.5 vCPUs.
          memory: 256M # Allow up to 256M of RAM.
    depends_on:
      vaultwarden-db:
        condition: service_healthy # Require vaultwarden-db to be ready before connecting.
        restart: true # Restart when vaultwarden-db is restarted.
    healthcheck:
      test: "wget --spider http://127.0.0.1:80/alive || exit 1"

  vaultwarden-db:
    <<: *defaults
    image: ghcr.io/11notes/postgres:17
    container_name: vaultwarden-db
    hostname: vaultwarden-db
    environment:
      POSTGRES_BACKUP_SCHEDULE: "0 6 * * *" # Backup daily at 6AM.
      POSTGRES_PASSWORD: "${VAULTWARDEN_DB_PASSWORD}" # Sets the database password.
      TZ: "${TZ}" # Sets the timezone.
    networks:
      - internal
    tmpfs:
      - "/postgres/log:uid=${PUID},gid=${PGID}" # Required for read_only image.
      - "/postgres/run:uid=${PUID},gid=${PGID}" # Required for read_only image.
    volumes:
      - vaultwarden-db-backups:/postgres/backup # PostgreSQL backups.
      - vaultwarden-db-config:/postgres/etc # PostgreSQL config.
      - vaultwarden-db-data:/postgres/var # PostgreSQL data.
    deploy:
      resources:
        limits:
          cpus: 0.5 # Allow using 0.5 vCPUs.
          memory: 256M # Allow using 256M of RAM.

  ###########################################################################
  # Anubis: Anti-bot/scraper tool - https://anubis.techaro.lol              #
  ###########################################################################

  vaultwarden-anubis:
    <<: *defaults
    image: ghcr.io/techarohq/anubis:latest
    container_name: vaultwarden-anubis
    hostname: vaultwarden-anubis
    networks:
      - external
    environment:
      BIND: ":80" # Bind to the used container port..
      ED25519_PRIVATE_KEY_HEX: "${VAULTWARDEN_ANUBIS_KEY}" # Sets the private key.
      REDIRECT_DOMAINS: "*.${VAULTWARDEN_URL}" # Sets allowed redirect URLs.
      SERVE_ROBOTS_TXT: "true" # Serve a default robots.txt.
      SLOG_LEVEL: "DEBUG" # Log more things.
      TARGET: "http://vaultwarden:80" # Target the container.
      TZ: "${TZ}" # Sets the timezone.
      WEBMASTER_EMAIL: "${ACME_EMAIL}" # Sets the webmaster email.
    depends_on:
      caddy:
        condition: service_healthy # Require Caddy to be healthy.
        restart: true # Restart when Caddy restarts.
      vaultwarden:
        condition: service_healthy # Require Vaultwarden to be healthy.
        restart: true # Restart when Vaultwarden restarts.
    deploy:
      resources:
        limits:
          cpus: 0.25 # Allow using 0.25 vCPUs.
          memory: 64MB # Allow using 64MB of RAM.
    healthcheck:
      test: ["CMD", "anubis", "--healthcheck"]

networks:
  external:
    external: true
    name: external-network
  internal:
    external: true
    name: internal-network

volumes:
  vaultwarden:
    name: vaultwarden-volume
    external: true
  vaultwarden-db-backups:
    name: vaultwarden-db-backups-volume
    external: true
  vaultwarden-db-config:
    name: vaultwarden-db-config-volume
    external: true
  vaultwarden-db-data:
    name: vaultwarden-db-data-volume
    external: true
