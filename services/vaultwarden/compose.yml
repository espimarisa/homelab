services:
  ###########################################################################
  # Vaultwarden: BW server - https://github.com/dani-garcia/vaultwarden     #
  ###########################################################################

  vaultwarden:
    image: ghcr.io/dani-garcia/vaultwarden:1.34.3-alpine
    container_name: vaultwarden
    hostname: vaultwarden
    read_only: true
    restart: unless-stopped
    user: "${PUID}:${PGID}"
    environment:
      ADMIN_RATELIMIT_MAX_BURST: "3"
      ADMIN_RATELIMIT_SECONDS: "300"
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}
      DOMAIN: "https://${VAULTWARDEN_URL}"
      EMAIL_CHANGE_ALLOWED: "true"
      DATABASE_URL: "postgres://postgres:${VAULTWARDEN_DB_PASSWORD}@vaultwarden-db:5432/postgres"
      EMERGENCY_ACCESS_ALLOWED: "true"
      EXPERIMENTAL_CLIENT_FEATURE_FLAGS: "inline-menu-positioning-improvements,inline-menu-totp,ssh-agent,ssh-key-vault-item,export-attachments"
      IP_HEADER: "X-Forwarded-For"
      LOGIN_RATELIMIT_MAX_BURST: "10"
      LOGIN_RATELIMIT_SECONDS: "60"
      PUSH_ENABLED: "${VAULTWARDEN_PUSH_ENABLED}"
      PUSH_INSTALLATION_ID: "${VAULTWARDEN_PUSH_INSTALLATION_ID}"
      PUSH_INSTALLATION_KEY: "${VAULTWARDEN_PUSH_INSTALLATION_KEY}"
      REQUIRE_DEVICE_EMAIL: "true"
      SENDS_ALLOWED: "true"
      SIGNUPS_ALLOWED: "${VAULTWARDEN_SIGNUPS}"
      SIGNUPS_VERIFY: "true"
      SMTP_FROM: "${SMTP_SENDER}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PASSWORD: "${SMTP_PASSWORD}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_SECURITY: "${SMTP_SECURITY}"
      SMTP_TIMEOUT: "${SMTP_TIMEOUT}"
      SMTP_USERNAME: "${SMTP_USERNAME}"
      TZ: "${TZ}"
      WEB_VAULT_ENABLED: "true"
      WEBSOCKET_ENABLED: "true"
    ports:
      - 80/tcp
    networks:
      - caddy
      - internal-only
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}"
    volumes:
      - vaultwarden:/data
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 256M
    depends_on:
      vaultwarden-db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: "wget --spider http://127.0.0.1:80/alive || exit 1"
    security_opt:
      - no-new-privileges:true

  vaultwarden-db:
    image: ghcr.io/11notes/postgres:17
    container_name: vaultwarden-db
    hostname: vaultwarden-db
    read_only: true
    restart: unless-stopped
    environment:
      POSTGRES_BACKUP_SCHEDULE: "0 6 * * *"
      POSTGRES_PASSWORD: "${VAULTWARDEN_DB_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - internal-only
    tmpfs:
      - "/postgres/log:uid=${PUID},gid=${PGID}"
      - "/postgres/run:uid=${PUID},gid=${PGID}"
    volumes:
      - vaultwarden-db-backups:/postgres/backup
      - vaultwarden-db-config:/postgres/etc
      - vaultwarden-db-data:/postgres/var
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 512M
    security_opt:
      - no-new-privileges:true

networks:
  caddy:
    external: true
    name: caddy-network
  internal-only:
    driver: bridge
    external: true
    internal: true
    name: internal-only-network

volumes:
  vaultwarden:
    name: vaultwarden-volume
    external: true
  vaultwarden-db-backups:
    name: vaultwarden-db-backups-volume
    external: true
  vaultwarden-db-config:
    name: vaultwarden-db-config-volume
    external: true
  vaultwarden-db-data:
    name: vaultwarden-db-data-volume
    external: true
