---
# Default environment variables.
x-defaults-environment: &defaults-environment
  PGID: "${PGID}" # Local group to run as.
  PUID: "${PUID}" # Local user to run as.
  TZ: "${TZ}" # Configures the timezone to use.
  UMASK: "${UMASK}" # Default umask to apply to newly created files.

# Default container options.
x-defaults: &defaults
  env_file: ../../.env
  environment: *defaults-environment
  network_mode: service:gluetun
  restart: unless-stopped
  cap_add:
    - CHOWN # Required for changing ownership.
    - FOWNER # Required for changing ownership.
    - FSETID # Required for adjusting IDs.
    - SETGID # Required for dropping down to GID.
    - SETUID # Required for dropping down to UID.
  cap_drop:
    - ALL
  depends_on:
    gluetun:
      condition: service_healthy
      restart: true
  security_opt:
    - no-new-privileges:true

services:
  ###########################################################################
  # Gluetun: VPN - https://github.com/qdm12/gluetun                         #
  ###########################################################################

  gluetun:
    image: ghcr.io/qdm12/gluetun:latest # Use latest for more updated servers.
    container_name: gluetun
    env_file: ../../.env
    hostname: gluetun
    restart: unless-stopped
    devices:
      - /dev/net/tun:/dev/net/tun # TUN/TAP device passthrough.
    environment:
      BLOCK_MALICIOUS: "off" # Disables Unbound, lowers RAM usage. https://github.com/qdm12/gluetun/issues/765
      DOT_PROVIDERS: "quad9" # Use Quad9.
      FIREWALL_OUTBOUND_SUBNETS: "${FIREWALL_OUTBOUND_SUBNETS}" # List of subnets allowed to communicate with Gluetun over the gateway.
      FIREWALL_VPN_INPUT_PORTS: "${FIREWALL_VPN_INPUT_PORTS}" # List of VPN server-side port forwarded ports.
      HEALTH_TARGET_ADDRESS: "www.quad9.net:443" # Use Quad9 for healthchecks. Cloudflare can occasionally cause issues with cranky IPs.
      HEALTH_VPN_DURATION_INITIAL: "30s" # Increase the initial healthcheck time to reduce false-positive failures.
      PGID: "${PGID}" # Local group to run as.
      PUID: "${PUID}" # Local user to run as.
      SERVER_CITIES: "${SERVER_CITIES}" # Optional list of server cities to connect to.
      SERVER_COUNTRIES: "${SERVER_COUNTRIES}" # Optional list of server countries to connect to.
      SERVER_HOSTNAMES: "${SERVER_HOSTNAMES}" # Optional list of server hostnames to connect to.
      SERVER_NAMES: "${SERVER_NAMES}" # Optional list of server names to connect to.
      SERVER_REGIONS: "${SERVER_REGIONS}" # Optional list of server regions to connect to.
      TZ: "${TZ}" # Configures the timezone to use.
      UPDATER_PERIOD: "24h" # Update server data every 24 hours.
      VPN_SERVICE_PROVIDER: "${VPN_SERVICE_PROVIDER}" # https://github.com/qdm12/gluetun-wiki/blob/main/setup/providers
      VPN_TYPE: "wireguard" # Use Wireguard for VPN connections.
      WIREGUARD_ADDRESSES: "${WIREGUARD_ADDRESSES}" # Address(es) from Wireguard config (i.e 10.XXX.XXX.XXX/32).
      WIREGUARD_ENDPOINT_PORT: "${WIREGUARD_ENDPOINT_PORT}" # Endpoint port from Wireguard config.
      WIREGUARD_MTU: "1380" # Use a lower MTU, I was able to get the best AirVPN performance at 1380.
      WIREGUARD_PERSISTENT_KEEPALIVE_INTERVAL: "25s" # Increase the keepalive time a lil bit.
      WIREGUARD_PRESHARED_KEY: "${WIREGUARD_PRESHARED_KEY}" # PresharedKey from Wireguard config.
      WIREGUARD_PRIVATE_KEY: "${WIREGUARD_PRIVATE_KEY}" # PrivateKey from Wireguard config.
      WIREGUARD_PUBLIC_KEY: "${WIREGUARD_PUBLIC_KEY}" # PublicKey from Wireguard config.
    expose:
      - "${SOULSEEK_PORT:-50300}/tcp" # Soulseek traffic.
      - 5030/tcp # slskd web interface.
      - 5299/tcp # LazyLibrarian web interface.
      - 8080/tcp # qBittorrent web interface.
      - 8191/tcp # Byparr server.
      - 9696/tcp # Prowlarr web interface.
    networks:
      caddy:
      gluetun:
        ipv4_address: 172.19.0.2 # Use 172.19.0.2 as the Gluetun IP address.
    volumes:
      - gluetun:/gluetun
    cap_add:
      - NET_ADMIN # Required for Wireguard configuration.
    cap_drop:
      - AUDIT_WRITE
      - MKNOD
      - SYS_CHROOT
    deploy:
      resources:
        limits:
          cpus: "1.0" # Allow up to 100% of 1 vCPU.
          memory: "1G" # Allow up to 1GB of RAM usage.
        reservations:
          cpus: "0.5" # Reserve 50% of 1 vCPU.
          memory: "256M" # Reserve 256MB of RAM.
    security_opt:
      - no-new-privileges:true

  ###########################################################################
  # qBittorrent: BitTorrent client - https://www.qbittorrent.org/           #
  ###########################################################################

  qbittorrent:
    <<: *defaults
    image: ghcr.io/11notes/qbittorrent:5.1.2
    container_name: qbittorrent
    read_only: true
    volumes:
      - downloads:/downloads
      - qbittorrent-config:/etc
      - qbittorrent-db:/var
    deploy:
      resources:
        limits:
          cpus: "4.0" # Allow up to 4 vCPUs.
          memory: "8G" # Allow up to 8GB of RAM.
        reservations:
          cpus: "1.0" # Reserve 1 vCPU.
          memory: "1G" # Reserve 1GB of RAM.

  ###########################################################################
  # LazyLibrarian: Book manager and PVR - https://lazylibrarian.gitlab.io   #
  ###########################################################################

  lazylibrarian:
    <<: *defaults
    image: lscr.io/linuxserver/lazylibrarian:version-656e4558
    container_name: lazylibrarian
    volumes:
      - downloads:/downloads
      - lazylibrarian:/config
      - media-library:/library
    deploy:
      resources:
        limits:
          cpus: "2.0" # Allow up to 2 vCPUs.
          memory: "1G" # Allow up to 1GB of RAM.
        reservations:
          cpus: "0.25" # Reserve 25% of 1 vCPU.
          memory: "256M" # Reserve 256MB of RAM.

  ###########################################################################
  # slskd: Soulseek client - https://github.com/slskd/slskd                 #
  ###########################################################################

  slskd:
    <<: *defaults
    image: ghcr.io/slskd/slskd:0.23.2
    container_name: slskd
    user: "${PUID}:${PGID}"
    environment:
      <<: *defaults-environment
      SLSKD_DOWNLOADS_DIR: "/downloads/soulseek" # mkdir -p ${DOWNLOADS_PATH}/soulseek
      SLSKD_INCOMPLETE_DIR: "/downloads/soulseek/.incomplete" # mkdir -p ${DOWNLOADS_PATH}/soulseek/.incomplete
      SLSKD_REMOTE_CONFIGURATION: "true" # Allows configuring settings through the web interface.
      SLSKD_SHARED_DIR: "/library/music" # Share sorted music library.
      SLSKD_SLSK_LISTEN_PORT: "${SOULSEEK_PORT:-50300}"
      SLSKD_SLSK_PASSWORD: "${SOULSEEK_PASSWORD}" # Soulseek password to use.
      SLSKD_SLSK_USERNAME: "${SOULSEEK_USERNAME}" # Soulseek username to use.
      SLSKD_UMASK: "${UMASK}" # Configures the umask to set on newly created files.
      SLSKD_USERNAME: "${SLSKD_USERNAME}" # Configures the web ui username.
      SOULSEEK_PASSWORD: "${SOULSEEK_PASSWORD}" # Configures the web ui password.
      TZ: "${TZ}" # Configures the timezone to use.
    volumes:
      - slskd:/app
      - downloads:/downloads
      - media-library:/library:ro
    healthcheck:
      test: "wget --spider http://127.0.0.1:5030/health || exit 1"
    deploy:
      resources:
        limits:
          cpus: "2.0" # Allow up to 2 vCPUs.
          memory: "2G" # Allow up to 2GB of RAM.
        reservations:
          cpus: "0.25" # Reserve 25% of 1 vCPU.
          memory: "512M" # Reserve 512MB of RAM.

  ###########################################################################
  # Prowlarr: Indexer manager for PVRs - https://prowlarr.com               #
  ###########################################################################

  prowlarr:
    <<: *defaults
    image: ghcr.io/11notes/prowlarr:2.0.5
    read_only: true
    container_name: prowlarr
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}" # Required for read-only image.
    volumes:
      - downloads:/downloads
      - prowlarr:/prowlarr/etc
    deploy:
      resources:
        limits:
          cpus: "2.0" # Allow up to 2 vCPUs.
          memory: "2G" # Allow up to 2GB of RAM.
        reservations:
          cpus: "0.5" # Reserve 50% of 1 vCPU.
          memory: "512M" # Reserve 512MB of RAM.

  ###########################################################################
  # Byparr: Cloudflare solver - https://github.com/ThePhaseless/Byparr      #
  ###########################################################################

  byparr:
    <<: *defaults
    image: ghcr.io/thephaseless/byparr:2.0.1
    container_name: byparr
    volumes:
      - /etc/localtime:/etc/localtime:ro # Local timezone mount.
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: "2.0" # Allow up to 2 vCPUs.
          memory: "2G" # Allow up to 2GB of RAM.
        reservations:
          cpus: "0.5" # Reserve 50% of 1 vCPU.
          memory: "512M" # Reserve 512MB of RAM.

  ###########################################################################
  # MaM-IP-Helper: MyAnonaMouse seedbox IP synchronization.                 #
  ###########################################################################

  mam-ip-helper:
    <<: *defaults
    image: tyzen9/myanonamouse-ip-helper:1.0.0
    container_name: mam-ip-helper
    read_only: true
    user: ${PUID}:${PGID}
    environment:
      <<: *defaults-environment
      MAM_ID: "${MAM_ID}" # MyAnonaMouse session ID.
    deploy:
      resources:
        limits:
          cpus: "0.1" # Allow up to 10% of 1 vCPU.
          memory: "32M" # Allow up to 32MB of memory usage.
        reservations:
          cpus: "0.05" # Reserve 5% of 1 vCPU.
          memory: "16M" # Reserve 16MB of RAM.

networks:
  caddy:
    external: true
    name: caddy-network # $ docker network create caddy-network
  gluetun:
    driver: bridge
    external: true
    ipam:
      config:
        - subnet: 172.19.0.0/16 # Use 172.19.0.0/16 as a static subnet.
          gateway: 172.19.0.1 # Use 172.19.0.1 as the default gateway.
    name: gluetun-network # $ docker network create gluetun-network

volumes:
  gluetun:
    external: true
    name: gluetun-volume # $ docker volume create gluetun-volume
  lazylibrarian:
    external: true
    name: lazylibrarian-volume # $ docker volume create lazylibrarian-volume
  qbittorrent-config:
    external: true
    name: qbittorrent-config-volume # $ docker volume create qbittorrent-config-volume
  qbittorrent-db:
    external: true
    name: qbittorrent-db-volume # $ docker volume create qbittorrent-db-volume
  prowlarr:
    external: true
    name: prowlarr-volume # $ docker volume create prowlarr-volume
  slskd:
    external: true
    name: slskd-volume # $ docker volume create slskd-volume
  downloads:
    name: downloads-bind
    driver_opts:
      device: "${DOWNLOADS_PATH}" # Root path to store downloaded files into.
      o: bind
      type: none
  media-library:
    name: media-library-bind
    driver_opts:
      device: "${MEDIA_LIBRARY_PATH}" # Root path to the media library.
      o: bind
      type: none
