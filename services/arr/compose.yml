services:
  ###########################################################################
  # Lidarr: Music manager, organizer, and PVR - https://lidarr.audio        #
  ###########################################################################

  lidarr:
    image: ghcr.io/hotio/lidarr:pr-plugins-2.14.4.4810
    container_name: lidarr
    hostname: lidarr
    restart: unless-stopped
    environment:
      PGID: "${PGID}"
      PUID: "${PUID}"
      TZ: "${TZ}"
      UMASK: "${UMASK}"
    expose:
      - 8686/tcp
    networks:
      caddy:
      gluetun:
        ipv4_address: 172.19.0.20
      internal-only:
    volumes:
      - downloads:/downloads
      - lidarr:/config
      - media-library:/library
    cap_add:
      - CHOWN
      - FOWNER
      - FSETID
      - SETGID
      - SETUID
    cap_drop:
      - ALL
    depends_on:
      lidarr-db:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2048M
    security_opt:
      - no-new-privileges:true

  lidarr-db:
    image: ghcr.io/11notes/postgres:17
    container_name: lidarr-db
    hostname: lidarr-db
    read_only: true
    restart: unless-stopped
    environment:
      POSTGRES_BACKUP_SCHEDULE: "0 6 * * *"
      POSTGRES_PASSWORD: "${LIDARR_DB_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - internal-only
    tmpfs:
      - "/postgres/log:uid=${PUID},gid=${PGID}"
      - "/postgres/run:uid=${PUID},gid=${PGID}"
    volumes:
      - lidarr-db-backups:/postgres/backup
      - lidarr-db-config:/postgres/etc
      - lidarr-db-data:/postgres/var
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1024M
    security_opt:
      - no-new-privileges:true

  ###########################################################################
  # Prowlarr: Indexer manager for PVRs - https://prowlarr.com               #
  ###########################################################################

  prowlarr:
    image: ghcr.io/11notes/prowlarr:2.0.5
    container_name: prowlarr
    network_mode: service:gluetun
    read_only: true
    restart: unless-stopped
    environment:
      TZ: "${TZ}"
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}"
    volumes:
      - downloads:/downloads
      - prowlarr:/prowlarr/etc
    cap_drop:
      - ALL
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
      prowlarr-db:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2048M
    security_opt:
      - no-new-privileges:true

  prowlarr-db:
    image: ghcr.io/11notes/postgres:17
    container_name: prowlarr-db
    read_only: true
    restart: unless-stopped
    network_mode: service:gluetun
    environment:
      POSTGRES_BACKUP_SCHEDULE: "0 6 * * *"
      POSTGRES_PASSWORD: "${PROWLARR_DB_PASSWORD}"
      TZ: "${TZ}"
    tmpfs:
      - "/postgres/log:uid=${PUID},gid=${PGID}"
      - "/postgres/run:uid=${PUID},gid=${PGID}"
    volumes:
      - prowlarr-db-backups:/postgres/backup
      - prowlarr-db-config:/postgres/etc
      - prowlarr-db-data:/postgres/var
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1024M
    security_opt:
      - no-new-privileges:true

  ###########################################################################
  # Radarr: Movie manager, organizer, and PVR - https://radarr.tv           #
  ###########################################################################

  radarr:
    image: ghcr.io/11notes/radarr:5.28.0
    container_name: radarr
    hostname: radarr
    read_only: true
    restart: unless-stopped
    environment:
      TZ: "${TZ}"
    expose:
      - 7878/tcp
    networks:
      caddy:
      gluetun:
        ipv4_address: 172.19.0.21
      internal-only:
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}"
    volumes:
      - ../../scripts/radarr:/scripts
      - downloads:/downloads
      - media-library:/library
      - radarr:/radarr/etc
    cap_add:
      - CHOWN
    cap_drop:
      - ALL
    depends_on:
      lidarr-db:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2048M
    security_opt:
      - no-new-privileges:true

  radarr-db:
    image: ghcr.io/11notes/postgres:17
    container_name: radarr-db
    hostname: radarr-db
    read_only: true
    restart: unless-stopped
    environment:
      POSTGRES_BACKUP_SCHEDULE: "0 6 * * *"
      POSTGRES_PASSWORD: "${RADARR_DB_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - internal-only
    tmpfs:
      - "/postgres/log:uid=${PUID},gid=${PGID}"
      - "/postgres/run:uid=${PUID},gid=${PGID}"
    volumes:
      - radarr-db-backups:/postgres/backup
      - radarr-db-config:/postgres/etc
      - radarr-db-data:/postgres/var
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1024M
    security_opt:
      - no-new-privileges:true

  ###########################################################################
  # Readarr: Book manager - https://github.com/pennydreadful/readarr        #
  ###########################################################################

  readarr:
    image: ghcr.io/pennydreadful/bookshelf:hardcover-v0.4.20.91
    container_name: readarr
    restart: unless-stopped
    environment:
      PGID: "${PGID}"
      PUID: "${PUID}"
      TZ: "${TZ}"
      UMASK: "${UMASK}"
    expose:
      - 8787/tcp
    networks:
      caddy:
      gluetun:
        ipv4_address: 172.19.0.22
      internal-only:
    volumes:
      - downloads:/downloads
      - readarr:/config
      - media-library:/library
    cap_add:
      - CHOWN
      - FOWNER
      - FSETID
      - SETGID
      - SETUID
    cap_drop:
      - ALL
    depends_on:
      readarr-db:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2048M
    security_opt:
      - no-new-privileges:true

  readarr-db:
    image: ghcr.io/11notes/postgres:17
    container_name: readarr-db
    hostname: readarr-db
    read_only: true
    restart: unless-stopped
    environment:
      POSTGRES_BACKUP_SCHEDULE: "0 6 * * *"
      POSTGRES_PASSWORD: "${READARR_DB_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - internal-only
    tmpfs:
      - "/postgres/log:uid=${PUID},gid=${PGID}"
      - "/postgres/run:uid=${PUID},gid=${PGID}"
    volumes:
      - readarr-db-backups:/postgres/backup
      - readarr-db-config:/postgres/etc
      - readarr-db-data:/postgres/var
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1024M
    security_opt:
      - no-new-privileges:true

  ###########################################################################
  # Sonarr: Series manager, organizer, and PVR - https://sonarr.tv          #
  ###########################################################################

  sonarr:
    image: ghcr.io/11notes/sonarr:4.0.15
    container_name: sonarr
    hostname: sonarr
    read_only: true
    restart: unless-stopped
    environment:
      TZ: "${TZ}"
    expose:
      - 8989/tcp
    networks:
      caddy:
      gluetun:
        ipv4_address: 172.19.0.23
      internal-only:
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}"
    volumes:
      - downloads:/downloads
      - media-library:/library
      - sonarr:/sonarr/etc
    cap_add:
      - CHOWN
    cap_drop:
      - ALL
    depends_on:
      sonarr-db:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2048M
    security_opt:
      - no-new-privileges:true

  sonarr-db:
    image: ghcr.io/11notes/postgres:17
    container_name: sonarr-db
    hostname: sonarr-db
    read_only: true
    restart: unless-stopped
    environment:
      POSTGRES_BACKUP_SCHEDULE: "0 6 * * *"
      POSTGRES_PASSWORD: "${SONARR_DB_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - internal-only
    tmpfs:
      - "/postgres/log:uid=${PUID},gid=${PGID}"
      - "/postgres/run:uid=${PUID},gid=${PGID}"
    volumes:
      - sonarr-db-backups:/postgres/backup
      - sonarr-db-config:/postgres/etc
      - sonarr-db-data:/postgres/var
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: 1
          memory: 1024M
    security_opt:
      - no-new-privileges:true

networks:
  caddy:
    external: true
    name: caddy-network
  gluetun:
    driver: bridge
    external: true
    ipam:
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1
    name: gluetun-network
  internal-only:
    driver: bridge
    external: true
    internal: true
    name: internal-only-network

volumes:
  lidarr:
    name: lidarr-volume
    external: true
  lidarr-db-data:
    name: lidarr-db-data-volume
    external: true
  lidarr-db-config:
    name: lidarr-db-config-volume
    external: true
  lidarr-db-backups:
    name: lidarr-db-backups-volume
    external: true
  prowlarr:
    name: prowlarr-volume
    external: true
  prowlarr-db-data:
    name: prowlarr-db-data-volume
    external: true
  prowlarr-db-config:
    name: prowlarr-db-config-volume
    external: true
  prowlarr-db-backups:
    name: prowlarr-db-backups-volume
    external: true
  radarr:
    name: radarr-volume
    external: true
  radarr-db-data:
    name: radarr-db-data-volume
    external: true
  radarr-db-config:
    name: radarr-db-config-volume
    external: true
  radarr-db-backups:
    name: radarr-db-backups-volume
    external: true
  readarr:
    name: readarr-volume
    external: true
  readarr-db-data:
    name: readarr-db-data-volume
    external: true
  readarr-db-config:
    name: readarr-db-config-volume
    external: true
  readarr-db-backups:
    name: readarr-db-backups-volume
    external: true
  sonarr:
    name: sonarr-volume
    external: true
  sonarr-db-data:
    name: sonarr-db-data-volume
    external: true
  sonarr-db-config:
    name: sonarr-db-config-volume
    external: true
  sonarr-db-backups:
    name: sonarr-db-backups-volume
    external: true
  downloads:
    name: downloads-bind
    driver_opts:
      device: "${DOWNLOADS_PATH}"
      o: bind
      type: none
  media-library:
    name: media-library-bind
    driver_opts:
      device: "${MEDIA_LIBRARY_PATH}"
      o: bind
      type: none
