###########################################################################
# Jellyfin: Media Server - https://jellyfin.org                           #
###########################################################################

---
services:
  jellyfin:
    image: ghcr.io/jellyfin/jellyfin:10.11
    container_name: jellyfin
    hostname: jellyfin
    read_only: true # Prevent writing directly to the image.
    restart: unless-stopped
    user: "${PUID}:${PGID}" # Run as non-root user.
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128:ro
    environment:
      JELLYFIN_PublishedServerUrl: "https://${JELLYFIN_URL}" # Configures autodiscovery.
    expose:
      - 8096/tcp # Web interface reverse proxied externally at ${JELLYFIN_URL}.
    networks:
      - external
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}" # Required for read_only image.
    volumes:
      - /etc/localtime:/etc/localtime:ro # Local timezone mount.
      - jellyfin-cache:/cache:rw # Cache volume.
      - jellyfin-config:/config:rw # Configuration and database.
      - media-library:/library:ro # Read-only media library mount.
    cap_drop:
      - ALL # Drop all default capabilities.
    security_opt:
      - no-new-privileges:true # Do not allow privilege escalation.
    deploy:
      resources:
        limits:
          cpus: 4 # Allow up to 4 vCPUs.
          memory: 4G # Allow up to 4GB of RAM usage.
        reservations:
          cpus: 2 # Reserve 1 vCPU.
          memory: 1G # Reserve 1GB of RAM.
    group_add:
      - "${RENDER_GID}" # Adds user to the host render group.
    healthcheck:
      test: "curl --fail --retry 0 --silent http://127.0.0.1:8096/health || exit 1"

networks:
  external:
    external: true
    name: external-network

volumes:
  jellyfin-cache:
    external: true
    name: jellyfin-cache-volume
  jellyfin-config:
    external: true
    name: jellyfin-config-volume
  media-library:
    name: media-library-bind
    driver_opts:
      device: "${MEDIA_LIBRARY_PATH}"
      o: bind
      type: none
