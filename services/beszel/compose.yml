services:
  ###########################################################################
  # Beszel: Server monitoring hub - https://beszel.dev/                     #
  ###########################################################################

  beszel:
    image: ghcr.io/henrygd/beszel/beszel:0.13.2
    container_name: beszel
    env_file: ../../.env
    hostname: beszel
    restart: unless-stopped
    environment:
      APP_URL: "https://beszel.${INTERNAL_DOMAIN}"
    ports:
      - 127.0.0.1:8090:8090/tcp
    networks:
      - caddy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - beszel-data:/beszel_data
      - beszel-socket:/beszel_socket
    cap_drop:
      - ALL
    healthcheck:
      test: ["CMD", "/beszel", "health", "--url", "http://localhost:8090"]
    security_opt:
      - no-new-privileges:true

  ###########################################################################
  # Beszel Agent: Beszel agent for server monitoring.                       #
  ###########################################################################

  beszel-agent:
    image: ghcr.io/henrygd/beszel/beszel-agent-intel:0.13.2
    container_name: beszel-agent
    env_file: ../../.env
    hostname: beszel-agent
    network_mode: host
    restart: unless-stopped
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128:ro # Not working currently.
    environment:
      HUB_URL: "http://127.0.0.1:8090"
      KEY: "${BESZEL_KEY}"
      LISTEN: "0.0.0.0:45876"
      TOKEN: "${BESZEL_TOKEN}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # Host Docker socket mount, wooo scary!
      - ${STORAGE_PATH}/appdata:/extra-filesystems/storage/appdata:ro # ZFS mount for appdata.
      - ${STORAGE_PATH}/downloads:/extra-filesystems/storage/downloads:ro # ZFS mount for downloads.
      - ${STORAGE_PATH}/media-library:/extra-filesystems/storage/media-library:ro # ZFS mount for media-library.
      - beszel-agent:/var/lib/beszel-agent
      - beszel-socket:/beszel_socket
    cap_add:
      - CAP_PERFMON
    cap_drop:
      - AUDIT_WRITE
      - MKNOD
      - SETFCAP
      - SYS_ADMIN
      - SYS_CHROOT
      - SYS_PTRACE
    depends_on:
      beszel:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "/agent", "health"]
    security_opt:
      - no-new-privileges:true

networks:
  caddy:
    external: true
    name: caddy-network
  socket-proxy:
    external: true
    internal: true
    name: socket-proxy-network

volumes:
  beszel-agent:
    name: beszel-agent-volume
    external: true
  beszel-data:
    name: beszel-data-volume
    external: true
  beszel-socket:
    name: beszel-socket-volume
    external: true
