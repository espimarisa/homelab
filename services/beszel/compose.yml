---
# Default container options.
x-defaults: &defaults
  env_file: ../../.env
  read_only: true # Prevent writing directly to the image.
  restart: unless-stopped
  deploy:
    resources:
      limits:
        cpus: 0.25 # Allow using 0.25 vCPUs.
        memory: 64M # Allow using 64M of RAM.
  security_opt:
    - no-new-privileges:true # Do not allow privilege escalation.

services:
  ###########################################################################
  # Beszel: Server monitoring hub - https://beszel.dev/                     #
  ###########################################################################

  beszel:
    <<: *defaults
    image: ghcr.io/henrygd/beszel/beszel:0
    container_name: beszel
    hostname: beszel
    user: "${PUID}:${PGID}" # Run as non-root user.
    environment:
      APP_URL: "https://beszel.${INTERNAL_DOMAIN}" # Configures the URL to bind to.
      USER_EMAIL: "${BESZEL_EMAIL}" # Admin account email to use.
      USER_PASSWORD: "${BESZEL_PASSWORD}" # Admin account password to use.
    ports:
      - 127.0.0.1:8090:8090/tcp # Web interface reverse proxied internally at beszel.${INTERNAL_DOMAIN}.
    networks:
      - external
      - internal
    volumes:
      - /etc/localtime:/etc/localtime:ro # Local timezone mount.
      - beszel-data:/beszel_data:rw # Configuration and database.
      - beszel-socket:/beszel_socket:rw # Beszel socket.
    cap_drop:
      - ALL # Drop all default capabilities.
    healthcheck:
      test: ["CMD", "/beszel", "health", "--url", "http://127.0.0.1:8090"]
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}" # Required for read_only image.

  ###########################################################################
  # Beszel Agent: Beszel agent for server monitoring.                       #
  ###########################################################################

  beszel-agent:
    <<: *defaults
    image: ghcr.io/henrygd/beszel/beszel-agent-intel:0
    container_name: beszel-agent
    hostname: beszel-agent
    network_mode: host # Required for gathering network data.
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    environment:
      HUB_URL: "http://127.0.0.1:8090" # Listen to the beszel container.
      KEY: "${BESZEL_KEY}" # Beszel public key to authenticate with, configured in the hub post-deployment.
      LISTEN: "0.0.0.0:45876" # Bind to 0.0.0.0.
      TOKEN: "${BESZEL_TOKEN}" # Beszel token to authenticate with, configured in the hub post-deployment.
    volumes:
      - /etc/localtime:/etc/localtime:ro # Local timezone mount.
      - ${BACKREST_HDD_PATH}:/extra-filesystems/sdf:ro # lol
      - ${DOWNLOADS_CACHE_PATH}:/extra-filesystems/nvme1n1:ro # Downloads cache drive, change to be your path.
      - ${STORAGE_PATH}:/extra-filesystems/bcache0:ro # Storage drive, change to be your path.
      - beszel-agent:/var/lib/beszel-agent:rw # Besel agent.
      - beszel-socket:/beszel_socket:rw # Beszel socket.
      - /var/run/docker.sock:/var/run/docker.sock:ro # Socket volume, fuck it.
    cap_add:
      - PERFMON # needed for gpu
      - SYS_ADMIN # needed for gpu
    cap_drop:
      - AUDIT_WRITE
      - MKNOD
      - SYS_CHROOT
      - SYS_PTRACE
    depends_on:
      beszel:
        condition: service_healthy # Wait for Beszel to be healthy before connecting.
        restart: true # Restart when Beszel is restarted.
      socket-proxy:
        condition: service_healthy # Wait for the socket proxy to be healthy before connecting.
        restart: true # Restart when the socket proxy is restarted.
    healthcheck:
      test: ["CMD", "/agent", "health"]
    tmpfs:
      - "/tmp:uid=${PUID},gid=${PGID}" # Required for read_only image.

networks:
  external:
    external: true
    name: external-network
  internal:
    external: true
    name: internal-network

volumes:
  beszel-agent:
    name: beszel-agent-volume
    external: true
  beszel-data:
    name: beszel-data-volume
    external: true
  beszel-socket:
    name: beszel-socket-volume
    external: true
  socket-proxy:
    name: socket-proxy-volume
    external: true
